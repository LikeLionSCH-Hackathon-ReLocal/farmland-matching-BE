
services:
  db:
    image: postgres:16-alpine
    container_name: hackathon-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [app-net]
    restart: unless-stopped

  backend:
    image: ghcr.io/${GHCR_USERNAME}/farmland-matching-be:latest
    container_name: hackathon-app
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_BUCKET: ${SUPABASE_BUCKET}
      TZ: ${TZ}
      JAVA_OPTS: ${JAVA_OPTS}
      AI_BASE_URL: ${AI_BASE_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on: [db]
    expose: [ "${APP_PORT}" ]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:${APP_PORT}/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [app-net]
    restart: unless-stopped
    pull_policy: always

  nginx:
    image: nginx:1.27-alpine
    container_name: hackathon-nginx
    depends_on:
      app:
        condition: service_started
        required: true
    ports: [ "80:80" ]
    networks: [ app-net ]
    volumes:
      - /opt/hackathon/fe-build:/usr/share/nginx/html:ro
      - /opt/hackathon/nginx/app.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped


networks:
  app-net:
    name: app-net

volumes:
  pgdata:
    name: hackathon_pgdata
